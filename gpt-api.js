/*

ВАЖНО:
1. При отправке сообщения изначально сообщение получаем с GPT-API.
2. При отправке сообщения и сервера GPT, сохраняем его у codepeak сервера
3. Только после всех этих сохранений, сервер codepeak - вернет тот же gpt ответ. 
4. Суть в том, что нам нужно сохранять диалоги людей, чтобы при обновлении страницы они оставались.

Если человек за час отправил больше 10и запросов, тогда блокируем ему чат на 3 часа. (Можно прямо по cookie(поставив 3 часа) ограничить доступ, чтобы человек фейк-аккаунты потом не создавал)

Создание чата:

При создании нового чата, нужно отправить запрос и создать сессию.

POST: https://api.chatgpt.com/v1/sessions
{
  "message": "Привет! Можешь помочь мне разобраться в JavaScript?",
  "context": {}
}

В ответ приходит sessionId, его и нужно использовать в дальнейших запросах.
GPT:
{
  "sessionId": "abcdefg123456",
  "response": "Конечно, я могу помочь! В чем именно вы нуждаетесь?"
}

Допустим:
POST https://api.chatgpt.com/v1/sessions/abcdefg123456(тут и указали)/messages
{
  "message": "Можешь объяснить, как работает цикл for в JavaScript?",
  "context": {}
}

Последующие ответы, после создания сессии(ключ sessionId - уходит):
{
  "response": "Конечно! Цикл for в JavaScript используется для повторения блока кода определенное количество раз. Пример использования цикла for: for (let i = 0; i < 10; i++) { console.log(i); }"
}




Получение списка чатов:

GET: https://api.codepeak.ru/chats/getChats/:userID (отправляешь userId и токен пользователя, получаешь список чатов).

Пример: 
[
    {
        sessionId: "abcdefg123456",
        messages: [
            {
                "message": "Можешь объяснить, как работает цикл for в JavaScript?",
                "context": {}
            },
            {
                "response": "Конечно! Цикл for в JavaScript используется для повторения блока кода определенное количество раз. Пример использования цикла for: for (let i = 0; i < 10; i++) { console.log(i); }"
            }
        ]
    }
    ...
]


Ошибка со стороны клиента(на нашей стороне):
(такие ошибки игнорируем и не выводим в чат)
{
  "error": {
    "code": 400,
    "message": "Bad Request",
    "details": [
      {
        "code": "invalid_parameter",
        "message": "Invalid parameter value: message is required."
      }
    ]
  }
}

Ошибка со стороны сервера GPT(со стороны gpt):
(такая ошибка допустим выводится в чат и обозначается красным цветом!)
{
  "error": {
    "code": 500,
    "message": "Internal Server Error",
    "details": [
      {
        "code": "server_error",
        "message": "An internal server error occurred. Please try again later."
      }
    ]
  }
}
*/